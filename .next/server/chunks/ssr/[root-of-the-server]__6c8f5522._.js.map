{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///D:/New_Website/birdview-website/app/forms/JobApplicationForm/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport {\n  Input,\n  Button,\n  Card,\n  CardBody,\n  toast,\n} from \"@heroui/react\";\nimport Image from \"next/image\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/navigation\";\n\nexport interface FormdataType {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  address: string;\n  city: string;\n  province: string;\n  postalCode: string;\n  country: string;\n  resume: File | null;\n  dateAvailable: string;\n  desiredPay: string;\n  website: string;\n  linkedin: string;\n  employer: string;\n  position: string;\n  experience: string;\n  competencies: string;\n}\n\nconst JobApplicationForm: React.FC = () => {\n  const countries = [\"Kenya\", \"Uganda\", \"Tanzania\", \"Rwanda\"];\n  const router = useRouter();\n\n  const [formData, setFormData] = useState<FormdataType>({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    address: \"\",\n    city: \"\",\n    province: \"\",\n    postalCode: \"\",\n    country: \"Kenya\",\n    resume: null,\n    dateAvailable: \"\",\n    desiredPay: \"\",\n    website: \"\",\n    linkedin: \"\",\n    employer: \"\",\n    position: \"\",\n    experience: \"\",\n    competencies: \"\",\n  });\n\n  const [loaderIcon, setLoaderIcon] = useState(false);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handlePhoneChange = (value: string) => {\n    setFormData((prev) => ({ ...prev, phone: value }));\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files?.[0]) {\n      setFormData((prev) => ({ ...prev, resume: e.target.files![0] }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoaderIcon(true);\n\n    const data = new FormData();\n    Object.entries(formData).forEach(([key, val]) => {\n      if (val !== null) data.append(key, val as any);\n    });\n\n    try {\n      const res = await axios.post(\"/api/job-apply\", data, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n        timeout: 10000,\n      });\n\n      if (res.status === 200) {\n        toast({\n          title: \"✅ Application Submitted\",\n          description: res.data.message || \"Your application has been received.\",\n          color: \"success\",\n          variant: \"solid\",\n          placement: \"top-right\",\n          classNames: {\n            base: \"animate-slide-in-right shadow-lg border-l-4 border-green-500\",\n          },\n        });\n        setTimeout(() => router.push(\"/\"), 3000);\n      } else {\n        throw new Error(res.data.error || \"Unknown error\");\n      }\n    } catch (error: any) {\n      toast({\n        title: \"❌ Submission Failed\",\n        description: error.response?.data?.error || error.message,\n        color: \"danger\",\n        variant: \"solid\",\n        placement: \"top-right\",\n        classNames: {\n          base: \"animate-slide-in-right shadow-lg border-l-4 border-red-500\",\n        },\n      });\n    } finally {\n      setLoaderIcon(false);\n    }\n  };\n\n  return (\n    <div\n      className=\"min-h-screen flex items-center justify-center px-4 \n             bg-[url('/images/backdrop2.png')] bg-cover bg-center bg-no-repeat\"\n    >\n      <Card className=\"w-full max-w-2xl shadow-xl border border-gray-200 rounded-2xl bg-white\">\n        <CardBody>\n          <form\n            onSubmit={handleSubmit}\n            className=\"max-w-3xl w-full mx-auto p-8 bg-white shadow-xl rounded-3xl border border-gray-200\"\n          >\n            <div className=\"text-center\">\n              <div className=\"mb-4\">\n                <Image\n                  src=\"/images/logo.jpeg\"\n                  width={180}\n                  height={50}\n                  alt=\"Logo\"\n                  className=\"mx-auto\"\n                />\n              </div>\n              <h2 className=\"text-3xl font-bold text-gray-800\">\n                Job Application Form\n              </h2>\n              <div className=\"w-16 h-1 bg-blue-600 mt-3 mx-auto rounded-full\"></div>\n            </div>\n\n            {/* Name & Email */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-6\">\n              <Input\n                name=\"firstName\"\n                placeholder=\"First Name*\"\n                value={formData.firstName}\n                onChange={handleChange}\n                required\n              />\n              <Input\n                name=\"lastName\"\n                placeholder=\"Last Name*\"\n                value={formData.lastName}\n                onChange={handleChange}\n                required\n              />\n              <Input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email*\"\n                value={formData.email}\n                onChange={handleChange}\n                required\n              />\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Phone*</label>\n                <PhoneInput\n                  country={\"ke\"}\n                  value={formData.phone}\n                  onChange={handlePhoneChange}\n                  inputStyle={{ width: \"100%\" }}\n                />\n              </div>\n            </div>\n\n            {/* Address */}\n            <Input\n              className=\"mt-4\"\n              name=\"address\"\n              placeholder=\"Address*\"\n              value={formData.address}\n              onChange={handleChange}\n              required\n            />\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\n              <Input\n                name=\"city\"\n                placeholder=\"City*\"\n                value={formData.city}\n                onChange={handleChange}\n                required\n              />\n              <Input\n                name=\"province\"\n                placeholder=\"Province/County*\"\n                value={formData.province}\n                onChange={handleChange}\n                required\n              />\n              <Input\n                name=\"postalCode\"\n                placeholder=\"Postal Code*\"\n                value={formData.postalCode}\n                onChange={handleChange}\n                required\n              />\n            </div>\n\n            {/* Country */}\n            <div className=\"mt-4\">\n              <label className=\"block text-sm font-medium mb-1\">Country*</label>\n              <select\n                name=\"country\"\n                value={formData.country}\n                onChange={(e) =>\n                  setFormData((prev) => ({ ...prev, country: e.target.value }))\n                }\n                className=\"w-full border rounded-md p-2\"\n              >\n                {countries.map((c) => (\n                  <option key={c} value={c}>\n                    {c}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Resume */}\n            <div className=\"mt-4\">\n              <label className=\"block text-sm font-medium mb-1\">Resume*</label>\n              <input\n                type=\"file\"\n                onChange={handleFileChange}\n                accept=\".pdf,.doc,.docx\"\n                required\n              />\n            </div>\n\n            {/* Extra fields */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\n              <Input\n                name=\"dateAvailable\"\n                type=\"date\"\n                value={formData.dateAvailable}\n                onChange={handleChange}\n              />\n              <Input\n                name=\"desiredPay\"\n                placeholder=\"Desired Pay\"\n                value={formData.desiredPay}\n                onChange={handleChange}\n              />\n            </div>\n\n            <Input\n              className=\"mt-4\"\n              name=\"website\"\n              placeholder=\"Website, Blog, or Portfolio\"\n              value={formData.website}\n              onChange={handleChange}\n            />\n            <Input\n              className=\"mt-4\"\n              name=\"linkedin\"\n              placeholder=\"LinkedIn Profile URL\"\n              value={formData.linkedin}\n              onChange={handleChange}\n            />\n            <Input\n              className=\"mt-4\"\n              name=\"employer\"\n              placeholder=\"Current Employer*\"\n              value={formData.employer}\n              onChange={handleChange}\n              required\n            />\n            <Input\n              className=\"mt-4\"\n              name=\"position\"\n              placeholder=\"Current Position Title*\"\n              value={formData.position}\n              onChange={handleChange}\n              required\n            />\n            <Input\n              className=\"mt-4\"\n              name=\"experience\"\n              placeholder=\"Years of Banking Experience*\"\n              value={formData.experience}\n              onChange={handleChange}\n              required\n            />\n\n            <div className=\"text-center mt-6\">\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                isLoading={loaderIcon}\n                className=\"w-full md:w-auto px-8 py-3 rounded-full shadow-md text-white font-semibold\"\n              >\n                Submit Application\n              </Button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default JobApplicationForm;\n"],"names":[],"mappings":"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","debugId":null}}]
}