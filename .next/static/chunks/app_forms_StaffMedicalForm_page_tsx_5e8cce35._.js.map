{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/New_Website/birdview-website/app/forms/StaffMedicalForm/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Input,\n  Button,\n  Select,\n  SelectItem,\n  Card,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  toast,\n} from \"@heroui/react\";\nimport Image from \"next/image\";\nimport PhoneInput from \"react-phone-input-2\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport \"react-phone-input-2/lib/style.css\";\n\ninterface DependantType {\n  id: string | number;\n  relationship: string;\n  title: string;\n  firstName: string;\n  middleName: string;\n  surname: string;\n  idtypes: string;\n  idnos: string;\n  dob: string;\n  gendere: string;\n}\n\nexport interface FormdataType {\n  policyScheme: string;\n  relationship: string;\n  staffId: string;\n  title: string;\n  firstname: string;\n  middleName: string;\n  lastname: string;\n  idtype: string;\n  idno: string;\n  dateofbirth: string;\n  gender: string;\n  country: string;\n  city: string;\n  address: string;\n  mobileno: string;\n  eimail: string;\n  dependantsData: DependantType[];\n}\n\nexport interface ErrorsType {\n  [key: string]: string;\n}\n\nconst StaffMedicalForm: React.FC = () => {\n  const today = new Date().toISOString().split(\"T\")[0];\n\n  const [formData, setFormData] = useState<FormdataType>({\n    policyScheme: \"Birdview Microinsurance Medical Scheme\",\n    relationship: \"Principal\",\n    staffId: \"\",\n    title: \"\",\n    firstname: \"\",\n    middleName: \"\",\n    lastname: \"\",\n    idtype: \"\",\n    idno: \"\",\n    dateofbirth: \"\",\n    gender: \"\",\n    country: \"Kenya\",\n    city: \"\",\n    address: \"\",\n    mobileno: \"\",\n    eimail: \"\",\n    dependantsData: [\n      {\n        id: 1,\n        relationship: \"\",\n        title: \"\",\n        firstName: \"\",\n        middleName: \"\",\n        surname: \"\",\n        idtypes: \"\",\n        idnos: \"\",\n        dob: \"\",\n        gendere: \"\",\n      },\n    ],\n  });\n\n  const [loaderIcon, setLoaderIcon] = useState(false);\n  const [dependentCount, setDependentCount] = useState(1);\n  const [errors, setErrors] = useState<ErrorsType>({});\n  const [currentDependant, setCurrentDependant] = useState<DependantType | null>(null);\n  const [openModal, setOpenModal] = useState(false);\n\n  // Sync dependants count\n  useEffect(() => {\n    setFormData((prev) => {\n      const newDependants = Array.from({ length: dependentCount }, (_, idx) => {\n        return prev.dependantsData[idx] || {\n          id: idx + 1,\n          relationship: \"\",\n          title: \"\",\n          firstName: \"\",\n          middleName: \"\",\n          surname: \"\",\n          idtypes: \"\",\n          idnos: \"\",\n          dob: \"\",\n          gendere: \"\",\n        };\n      });\n      return { ...prev, dependantsData: newDependants };\n    });\n  }, [dependentCount]);\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handlePhoneChange = (value: string) => {\n    setFormData((prev) => ({ ...prev, mobileno: value }));\n  };\n\n  const handleAddDependant = () => {\n    if (formData.dependantsData.length >= 7) {\n      toast({\n        title: \"⚠️ Limit reached\",\n        description: \"You can only add up to 7 dependants.\",\n        variant: \"warning\",\n      });\n      return;\n    }\n    setDependentCount((prev) => prev + 1);\n  };\n\n  const handleOpenModal = (dep: DependantType) => {\n    setCurrentDependant(dep);\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setCurrentDependant(null);\n    setErrors({});\n    setOpenModal(false);\n  };\n\n  const handleChangeDep = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement> | { name: string; value: string }\n  ) => {\n    if (\"target\" in e) {\n      const { name, value } = e.target;\n      setCurrentDependant((prev) => prev && { ...prev, [name]: value });\n      setErrors((prev) => ({ ...prev, [name]: \"\" }));\n    } else {\n      const { name, value } = e;\n      setCurrentDependant((prev) => prev && { ...prev, [name]: value });\n      setErrors((prev) => ({ ...prev, [name]: \"\" }));\n    }\n  };\n\n  const handleSaveDependant = () => {\n    if (!currentDependant) return;\n    const newErrors: ErrorsType = {};\n    [\"relationship\", \"title\", \"firstName\", \"middleName\", \"surname\", \"idtypes\", \"idnos\", \"dob\", \"gendere\"].forEach(\n      (key) => {\n        if (!(currentDependant as any)[key]) newErrors[key] = `${key} is required`;\n      }\n    );\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    setFormData((prev) => ({\n      ...prev,\n      dependantsData: prev.dependantsData.map((d) =>\n        d.id === currentDependant.id ? currentDependant : d\n      ),\n    }));\n    handleCloseModal();\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoaderIcon(true);\n    try {\n      const res = await fetch(\"/api/medicalStaff_form\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formData),\n      });\n      const data = await res.json();\n      if (res.ok) {\n        toast({\n          title: \"✅ Success\",\n          description: data.message,\n          color: \"success\",\n          variant: \"solid\",\n          placement: \"top-right\",\n        });\n        handleReset();\n      } else {\n        toast({\n          title: \"❌ Error\",\n          description: data.error,\n          color: \"danger\",\n          variant: \"solid\",\n          placement: \"top-right\",\n        });\n      }\n    } catch (err: any) {\n      toast({\n        title: \"❌ Error\",\n        description: err.message,\n        color: \"danger\",\n        variant: \"solid\",\n        placement: \"top-right\",\n      });\n    } finally {\n      setLoaderIcon(false);\n    }\n  };\n\n  const handleReset = () => {\n    setFormData({\n      policyScheme: \"Birdview Microinsurance Medical Scheme\",\n      relationship: \"Principal\",\n      staffId: \"\",\n      title: \"\",\n      firstname: \"\",\n      middleName: \"\",\n      lastname: \"\",\n      idtype: \"\",\n      idno: \"\",\n      dateofbirth: \"\",\n      gender: \"\",\n      country: \"Kenya\",\n      city: \"\",\n      address: \"\",\n      mobileno: \"\",\n      eimail: \"\",\n      dependantsData: [\n        {\n          id: 1,\n          relationship: \"\",\n          title: \"\",\n          firstName: \"\",\n          middleName: \"\",\n          surname: \"\",\n          idtypes: \"\",\n          idnos: \"\",\n          dob: \"\",\n          gendere: \"\",\n        },\n      ],\n    });\n    setDependentCount(1);\n  };\n\n  return (\n    <div\n      className=\"min-h-screen flex items-center justify-center px-4 \n             bg-[url('/images/backdrop2.png')] bg-cover bg-center bg-no-repeat\"\n    >\n      {loaderIcon && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/70\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      )}\n\n      <Card className=\"w-full max-w-3xl shadow-xl rounded-2xl p-6\">\n        <div className=\"flex justify-center my-4\">\n          <Image src=\"/images/logo.jpeg\" alt=\"Logo\" width={180} height={50} />\n        </div>\n        <h2 className=\"text-xl font-bold text-center mb-6\">\n          Staff Medical Detail Forms\n        </h2>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {/* Row 1 */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <Input label=\"Policy Scheme\" value={formData.policyScheme} disabled />\n            <Input label=\"Relationship\" value={formData.relationship} disabled />\n            <Input\n              label=\"Staff ID\"\n              name=\"staffId\"\n              value={formData.staffId}\n              onChange={handleChange}\n              required\n            />\n          </div>\n\n          {/* Row 2 */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <Select\n              label=\"Title\"\n              name=\"title\"\n              value={formData.title}\n              onValueChange={(v) =>\n                handleChange({ target: { name: \"title\", value: v } } as any)\n              }\n            >\n              {[\"Mr\", \"Mrs\", \"Miss\", \"Ms\", \"Dr\", \"Prof\"].map((t) => (\n                <SelectItem key={t} value={t}>\n                  {t}\n                </SelectItem>\n              ))}\n            </Select>\n            <Input\n              label=\"First Name\"\n              name=\"firstname\"\n              value={formData.firstname}\n              onChange={handleChange}\n              required\n            />\n            <Input\n              label=\"Middle Name\"\n              name=\"middleName\"\n              value={formData.middleName}\n              onChange={handleChange}\n            />\n          </div>\n\n          {/* Row 3 */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <Input\n              label=\"Last Name\"\n              name=\"lastname\"\n              value={formData.lastname}\n              onChange={handleChange}\n              required\n            />\n            <Select\n              label=\"ID Type\"\n              name=\"idtype\"\n              value={formData.idtype}\n              onValueChange={(v) =>\n                handleChange({ target: { name: \"idtype\", value: v } } as any)\n              }\n              required\n            >\n              {[\"National ID\", \"Passport\", \"Birth Certificate\"].map((t) => (\n                <SelectItem key={t} value={t}>\n                  {t}\n                </SelectItem>\n              ))}\n            </Select>\n            <Input\n              label=\"ID Number\"\n              name=\"idno\"\n              value={formData.idno}\n              onChange={handleChange}\n            />\n          </div>\n\n          {/* Row 4 */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <Input\n              type=\"date\"\n              label=\"Date of Birth\"\n              name=\"dateofbirth\"\n              value={formData.dateofbirth}\n              onChange={handleChange}\n              max={today}\n              required\n            />\n            <Select\n              label=\"Gender\"\n              name=\"gender\"\n              value={formData.gender}\n              onValueChange={(v) =>\n                handleChange({ target: { name: \"gender\", value: v } } as any)\n              }\n              required\n            >\n              {[\"Male\", \"Female\", \"Others\"].map((g) => (\n                <SelectItem key={g} value={g}>\n                  {g}\n                </SelectItem>\n              ))}\n            </Select>\n            <Input label=\"Country\" value={formData.country} disabled />\n          </div>\n\n          {/* Row 5 */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <Input\n              label=\"City\"\n              name=\"city\"\n              value={formData.city}\n              onChange={handleChange}\n            />\n            <Input\n              label=\"Address\"\n              name=\"address\"\n              value={formData.address}\n              onChange={handleChange}\n            />\n            <PhoneInput\n              country=\"ke\"\n              value={formData.mobileno}\n              onChange={handlePhoneChange}\n              inputStyle={{ width: \"100%\", height: \"57px\", borderRadius: \"8px\" }}\n              inputProps={{ name: \"mobileno\", required: true }}\n            />\n          </div>\n\n          {/* Row 6 */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <Input\n              label=\"Email\"\n              name=\"eimail\"\n              value={formData.eimail}\n              onChange={handleChange}\n            />\n          </div>\n\n          <div className=\"flex justify-between items-center mt-4\">\n            <h3 className=\"font-semibold text-lg\">Dependant Details</h3>\n            <Button\n              type=\"button\"\n              color=\"primary\"\n              onClick={handleAddDependant}\n              className=\"text-white font-semibold px-4 py-2 rounded-lg shadow-md\"\n              disabled={formData.dependantsData.length >= 7}\n            >\n              Add Dependant\n            </Button>\n          </div>\n\n          {formData.dependantsData.map((dep) => (\n            <Button\n              type=\"button\"\n              key={dep.id}\n              onClick={() => handleOpenModal(dep)}\n              variant=\"flat\"\n              className=\"my-2\"\n            >\n              Edit Dependant {dep.id}\n            </Button>\n          ))}\n\n          <div className=\"flex space-x-4 mt-6\">\n            <Button type=\"submit\" color=\"primary\" className=\"text-white font-semibold px-10 py-3 rounded-lg shadow-md\">\n              Submit\n            </Button>\n            <Button type=\"button\" color=\"danger\" className=\"text-white font-semibold px-10 py-3 rounded-lg shadow-md\" onClick={handleReset}>\n              Reset\n            </Button>\n          </div>\n        </form>\n      </Card>\n\n      {/* Dependant Modal with slide-in + fade + delete */}\n      <AnimatePresence>\n        {openModal && (\n          <motion.div\n            className=\"fixed inset-0 z-50 flex items-center justify-center bg-black /50\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <motion.div\n              initial={{ y: 100, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              exit={{ y: 100, opacity: 0 }}\n              transition={{ duration: 0.3, ease: \"easeInOut\" }}\n              className=\"w-full max-w-lg\"\n            >\n              <Modal isOpen={openModal} onOpenChange={setOpenModal} size=\"lg\">\n                <ModalContent>\n                  <ModalHeader className=\"text-lg font-semibold flex justify-between items-center\">\n                    Edit Dependant\n                    {currentDependant && (\n                      <Button\n                        size=\"sm\"\n                        color=\"danger\"\n                        className=\"mr-2 text-white font-semibold px-4 py-2 rounded-lg shadow-md\"\n                        onPress={() => {\n                          setFormData((prev) => ({\n                            ...prev,\n                            dependantsData: prev.dependantsData.filter(\n                              (d) => d.id !== currentDependant.id\n                            ),\n                          }));\n                          handleCloseModal();\n                        }}\n                      >\n                        Delete\n                      </Button>\n                    )}\n                  </ModalHeader>\n\n                  <ModalBody className=\"max-h-[70vh] overflow-y-auto\">\n                    {currentDependant && (\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                        <Input\n                          label=\"Relationship\"\n                          name=\"relationship\"\n                          value={currentDependant.relationship}\n                          onChange={handleChangeDep}\n                          errorMessage={errors.relationship}\n                        />\n\n                        <Select\n                          label=\"Title\"\n                          selectedKeys={[currentDependant.title]}\n                          onSelectionChange={(keys) =>\n                            handleChangeDep({\n                              name: \"title\",\n                              value: Array.from(keys)[0] as string,\n                            })\n                          }\n                        >\n                          {[\"Mr\", \"Mrs\", \"Miss\", \"Dr\", \"Prof\", \"Ms\", \"Master\"].map(\n                            (t) => (\n                              <SelectItem key={t} value={t}>\n                                {t}\n                              </SelectItem>\n                            )\n                          )}\n                        </Select>\n\n                        <Input\n                          label=\"First Name\"\n                          name=\"firstName\"\n                          value={currentDependant.firstName}\n                          onChange={handleChangeDep}\n                          errorMessage={errors.firstName}\n                        />\n\n                        <Input\n                          label=\"Middle Name\"\n                          name=\"middleName\"\n                          value={currentDependant.middleName}\n                          onChange={handleChangeDep}\n                          errorMessage={errors.middleName}\n                        />\n\n                        <Input\n                          label=\"Surname\"\n                          name=\"surname\"\n                          value={currentDependant.surname}\n                          onChange={handleChangeDep}\n                          errorMessage={errors.surname}\n                        />\n\n                        <Select\n                          label=\"ID Type\"\n                          selectedKeys={[currentDependant.idtypes]}\n                          onSelectionChange={(keys) =>\n                            handleChangeDep({\n                              name: \"idtypes\",\n                              value: Array.from(keys)[0] as string,\n                            })\n                          }\n                        >\n                          {[\"National ID\", \"Passport\", \"Birth Certificate\"].map(\n                            (t) => (\n                              <SelectItem key={t} value={t}>\n                                {t}\n                              </SelectItem>\n                            )\n                          )}\n                        </Select>\n\n                        <Input\n                          label=\"ID Number\"\n                          name=\"idnos\"\n                          value={currentDependant.idnos}\n                          onChange={handleChangeDep}\n                          errorMessage={errors.idnos}\n                        />\n\n                        <Input\n                          label=\"DOB\"\n                          name=\"dob\"\n                          type=\"date\"\n                          value={currentDependant.dob}\n                          onChange={handleChangeDep}\n                          max={today}\n                          errorMessage={errors.dob}\n                        />\n\n                        <Select\n                          label=\"Gender\"\n                          selectedKeys={[currentDependant.gendere]}\n                          onSelectionChange={(keys) =>\n                            handleChangeDep({\n                              name: \"gendere\",\n                              value: Array.from(keys)[0] as string,\n                            })\n                          }\n                        >\n                          {[\"Male\", \"Female\"].map((g) => (\n                            <SelectItem key={g} value={g}>\n                              {g}\n                            </SelectItem>\n                          ))}\n                        </Select>\n                      </div>\n                    )}\n                  </ModalBody>\n\n                  <ModalFooter>\n                    <Button variant=\"light\" onPress={handleCloseModal}>\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" onPress={handleSaveDependant}>\n                      Save\n                    </Button>\n                  </ModalFooter>\n                </ModalContent>\n              </Modal>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default StaffMedicalForm;\n"],"names":[],"mappings":"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","debugId":null}}]
}