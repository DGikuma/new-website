{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/New_Website/birdview-website/app/products/personal_accident/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n// HeroUI imports\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Table,\r\n    TableHeader,\r\n    TableColumn,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    Select,\r\n    SelectItem,\r\n} from \"@heroui/react\";\r\n\r\nimport { ShieldCheckIcon } from \"@heroicons/react/24/solid\";\r\n\r\n// AnimatedNumber from your components\r\nimport AnimatedNumber from \"./components/AnimateNumber\";\r\n\r\nconst PersonalAccident = () => {\r\n    const [currency, setCurrency] = useState(\"KES\");\r\n    const [exchangeRates, setExchangeRates] = useState<{ [key: string]: number }>(\r\n        {}\r\n    );\r\n    const [loadingRates, setLoadingRates] = useState(false);\r\n\r\n    const currencySymbols: { [key: string]: string } = {\r\n        USD: \"$\",\r\n        KES: \"KSh\",\r\n        EUR: \"€\",\r\n        GBP: \"£\",\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchExchangeRates = async () => {\r\n            try {\r\n                setLoadingRates(true);\r\n                const response = await axios.get(\r\n                    \"https://snownet-customer-quotation-server.onrender.com/api/underwriting/quotation/onlineQuotation/products/exchangeRate/\"\r\n                );\r\n                const ratesArray = response.data?.data || [];\r\n\r\n                const ratesMap: { [key: string]: number } = {};\r\n                for (let item of ratesArray) {\r\n                    if (item.currency && item.x_rate) {\r\n                        ratesMap[item.currency] = parseFloat(item.x_rate);\r\n                    }\r\n                }\r\n                setExchangeRates(ratesMap);\r\n            } catch (error) {\r\n                console.error(\"❌ Failed to fetch exchange rates:\", error);\r\n            } finally {\r\n                setLoadingRates(false);\r\n            }\r\n        };\r\n\r\n        fetchExchangeRates();\r\n    }, []);\r\n\r\n    const convertPremiumValue = (amount: number | string) => {\r\n        const rate = exchangeRates[currency] || 1;\r\n        return Number(amount) * rate;\r\n    };\r\n\r\n    const handleClickPersonalAccident = () => {\r\n        window.location.href = \"https://quote.birdviewinsurance.com/?ProductID=5\";\r\n    };\r\n\r\n    return (\r\n        <section className=\"relative bg-gradient-to-br from-gray-50 via-white to-gray-100 py-16 px-6\">\r\n            <div className=\"max-w-6xl mx-auto\">\r\n                {/* Intro */}\r\n                <motion.div\r\n                    initial={{ opacity: 0, y: 40 }}\r\n                    whileInView={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: 0.6 }}\r\n                    viewport={{ once: true }}\r\n                    className=\"text-center max-w-3xl mx-auto mb-12\"\r\n                >\r\n                    <h2 className=\"text-4xl md:text-5xl font-extrabold text-gray-900\">\r\n                        Personal Accident Cover\r\n                    </h2>\r\n                    <p className=\"text-gray-600 mt-4 text-lg\">\r\n                        Protect yourself and your loved ones with our{\" \"}\r\n                        <span className=\"font-semibold text-indigo-600\">\r\n                            Personal Accident Insurance\r\n                        </span>\r\n                        . Get fixed sum payouts in case of{\" \"}\r\n                        <span className=\"font-semibold\">death, permanent disablement</span>,\r\n                        or <span className=\"font-semibold\">medical expenses</span> due to an\r\n                        accident. Cover limits range from{\" \"}\r\n                        <span className=\"font-semibold\">KSh. 50,000</span> to{\" \"}\r\n                        <span className=\"font-semibold\">KSh. 500,000</span>.\r\n                    </p>\r\n                </motion.div>\r\n\r\n                {/* Currency Selector */}\r\n                <div className=\"flex justify-center mb-8\">\r\n                    <Select\r\n                        selectedKeys={[currency]}\r\n                        onSelectionChange={(keys) => setCurrency(Array.from(keys)[0] as string)}\r\n                        aria-label=\"Select Currency\"\r\n                        className=\"max-w-xs\"\r\n                    >\r\n                        {Object.keys(currencySymbols).map((c) => (\r\n                            <SelectItem key={c}>{c}</SelectItem>\r\n                        ))}\r\n                    </Select>\r\n                </div>\r\n\r\n                {/* Table */}\r\n                <motion.div\r\n                    initial={{ opacity: 0, y: 50 }}\r\n                    whileInView={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: 0.6, delay: 0.2 }}\r\n                    viewport={{ once: true }}\r\n                    className=\"rounded-2xl shadow-xl mb-12 overflow-x-auto bg-gradient-to-r from-indigo-600 via-blue-600 to-red-600 p-1\"\r\n                >\r\n                    <Table aria-label=\"Personal Accident Plans\" removeWrapper>\r\n                        <TableHeader>\r\n                            <TableColumn className=\"text-center text-white font-semibold\">\r\n                                Plan\r\n                            </TableColumn>\r\n                            <TableColumn className=\"text-center text-white font-semibold\">\r\n                                Main Benefit Covered\r\n                            </TableColumn>\r\n                            <TableColumn className=\"text-center text-white font-semibold\">\r\n                                Premium per Person\r\n                            </TableColumn>\r\n                        </TableHeader>\r\n                        <TableBody>\r\n                            {[\r\n                                { plan: \"Plan 1\", limit: 50000, premium: 500 },\r\n                                { plan: \"Plan 2\", limit: 100000, premium: 1000 },\r\n                                { plan: \"Plan 3\", limit: 200000, premium: 1340 },\r\n                                { plan: \"Plan 4\", limit: 250000, premium: 1670 },\r\n                                { plan: \"Plan 5\", limit: 300000, premium: 2000 },\r\n                                { plan: \"Plan 6\", limit: 500000, premium: 2500 },\r\n                            ].map((row, index) => (\r\n                                <TableRow\r\n                                    key={index}\r\n                                    className=\"hover:bg-white/10 transition-colors\"\r\n                                >\r\n                                    <TableCell className=\"text-center font-medium\">\r\n                                        {row.plan}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"text-center font-bold text-yellow-200\">\r\n                                        {currencySymbols[currency]}{\" \"}\r\n                                        <AnimatedNumber value={convertPremiumValue(row.limit)} />\r\n                                    </TableCell>\r\n                                    <TableCell className=\"text-center font-bold text-green-300\">\r\n                                        {currencySymbols[currency]}{\" \"}\r\n                                        <AnimatedNumber value={convertPremiumValue(row.premium)} />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </motion.div>\r\n\r\n                {/* CTA */}\r\n                <motion.div\r\n                    initial={{ opacity: 0, scale: 0.9 }}\r\n                    whileInView={{ opacity: 1, scale: 1 }}\r\n                    transition={{ duration: 0.6, delay: 0.3 }}\r\n                    viewport={{ once: true }}\r\n                    className=\"text-center\"\r\n                >\r\n                    <p className=\"text-gray-700 text-lg font-semibold mb-4\">\r\n                        Ready to secure your peace of mind?\r\n                    </p>\r\n                    <Button\r\n                        size=\"lg\"\r\n                        color=\"danger\"\r\n                        onPress={handleClickPersonalAccident}\r\n                        className=\"font-semibold\"\r\n                        startContent={<ShieldCheckIcon className=\"w-6 h-6\" />}\r\n                    >\r\n                        Get a Quote\r\n                    </Button>\r\n                </motion.div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default PersonalAccident;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}